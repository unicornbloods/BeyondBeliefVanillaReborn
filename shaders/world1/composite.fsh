#version 120
/////////ADJUSTABLE VARIABLES//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////ADJUSTABLE VARIABLES//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//#define CELSHADING //
	#define BORDER 1.0

	/////////INTERNAL VARIABLES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////INTERNAL VARIABLES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

uniform sampler2D colortex0;

varying vec2 texcoord;

uniform sampler2D gdepthtex;
uniform sampler2D gaux1;
uniform sampler2D depthtex0;
uniform float near;
uniform float far;
uniform float viewWidth;
uniform float viewHeight;

#define land_mask(x) (x < 1.0)

/////////////////////////FUNCTIONS/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////FUNCTIONS/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

vec2 newtc = texcoord.xy;

float     GetDepthLinear(in vec2 coord) {                    //Function that retrieves the scene depth. 0 - 1, higher values meaning farther away
   return 2.0f * near * far / (far + near - (2.0f * texture2D(gdepthtex, coord).x - 1.0f) * (far - near));
}

  #include "/lib/celshading.glsl"

  #include "/lib/Kernels.glsl"

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////MAIN//////////////////////////////////////////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


void main() {
	vec3 color = texture2D(colortex0, texcoord).rgb;


	#ifdef CELSHADING
		float iswater = float(aux.g > 0.04 && aux.g < 0.07);
		color = celshade(color, iswater);
	#endif

/* DRAWBUFFERS:0 */
		//gl_FragData[0] = vec4(color, 1.0); //colortex0

	
	#if (kernel_type == 0)

		gl_FragData[0] = vec4(color, 1.0); //colortex0

		#else

    vec3 sampleTex[9];
    for(int i = 0; i < 9; i++)
    {
        sampleTex[i] = vec3(texture2D(colortex0, texcoord.st + offsets[i]));
    }
    vec3 col = vec3(0.0);
    for(int i = 0; i < 9; i++)
        col += sampleTex[i] * kernel[i];

    gl_FragData[0] = vec4(col, 1.0);

		#endif

	gl_FragData[1] = vec4(1.0);
}
